name: Delete Action Cache
description: Delete GitHub Actions Cache after a pull request is closed
author: 'toshimaru'
branding:
  icon: 'trash'
  color: 'gray-dark'
inputs:
  github-token:
    description: 'A token for the repository'
    default: ${{ github.token }}
  limit:
    description: 'The number of caches to delete'
    default: '100'
  head-ref:
    description: 'The value of `github.head_ref`'
    default: ${{ github.head_ref }}
  pr-number:
    description: 'A number of the Pull Request'
    default: ${{ github.event.number }}
  ref:
    description: 'The value of `github.ref`'
    default: ${{ github.ref }}
  repo:
    description: 'The repository name'
    default: ${{ github.repository }}
runs:
  using: composite
  steps:
    - name: Delete GitHub Actions Cache
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        GH_REPO: ${{ inputs.repo }}
      run: |
        case ${{ github.event_name }} in
          pull_request|pull_request_target)
            # Delete pull request caches
            echo "Deleting caches for the ref \`refs/pull/${{ inputs.pr-number }}/merge\`..."
            for id in $(gh cache list --ref refs/pull/${{ inputs.pr-number }}/merge --json id --jq '.[].id' --order asc --limit ${{ inputs.limit }}); do
              gh cache delete $id
              echo "Cache deleted. (id: $id)"
            done

            # Delete branch caches
            echo "Deleting caches for the ref \`refs/heads/${{ inputs.head-ref }}\`..."
            for id in $(gh cache list --ref refs/heads/${{ inputs.head-ref }} --json id --jq '.[].id' --order asc --limit ${{ inputs.limit }}); do
              gh cache delete $id
              echo "Cache deleted. (id: $id)"
            done
            ;;
          workflow_dispatch|push)
            # Delete branch caches
            echo "Deleting caches for the ref \`${{ inputs.ref }}\`..."
            for id in $(gh cache list --ref ${{ inputs.ref }} --json id --jq '.[].id' --order asc --limit ${{ inputs.limit }}); do
              gh cache delete $id
              echo "Cache deleted. (id: $id)"
            done
            ;;
          *)
            echo "Unsupported event: ${{ github.event_name }}"
            ;;
        esac
